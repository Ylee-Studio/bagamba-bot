#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ Jira
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã –∑–∞–¥–∞—á, —Å—Ç–∞—Ç—É—Å—ã, –ø–µ—Ä–µ—Ö–æ–¥—ã –∏ –¥—Ä—É–≥—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
"""

import os
from jira import JIRA
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()


def get_jira_info():
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ Jira"""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    jira_url = os.getenv("JIRA_URL")
    jira_username = os.getenv("JIRA_USERNAME")
    jira_token = os.getenv("JIRA_API_TOKEN")
    project_key = os.getenv("JIRA_PROJECT_KEY", "INC")
    default_issue_type = os.getenv("JIRA_ISSUE_TYPE", "Task")

    if not all([jira_url, jira_username, jira_token]):
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Jira –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ .env –µ—Å—Ç—å:")
        print("- JIRA_URL")
        print("- JIRA_USERNAME")
        print("- JIRA_API_TOKEN")
        return

    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Jira
        jira = JIRA(server=jira_url, basic_auth=(jira_username, jira_token))

        print(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Jira: {jira_url}")
        print(f"üìã –ü—Ä–æ–µ–∫—Ç: {project_key}")
        print("=" * 60)

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
        try:
            project = jira.project(project_key)
            print(f"üìÅ –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: {project.name}")
            print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {project.description or '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}")
            print()
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ: {e}")
            print()

        # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø—ã –∑–∞–¥–∞—á
        print("üéØ –î–û–°–¢–£–ü–ù–´–ï –¢–ò–ü–´ –ó–ê–î–ê–ß:")
        print("-" * 40)
        try:
            issue_types = jira.project(project_key).issueTypes
            for issue_type in issue_types:
                print(f"‚Ä¢ {issue_type.name} (ID: {issue_type.id})")
                if hasattr(issue_type, "description") and issue_type.description:
                    print(f"  –û–ø–∏—Å–∞–Ω–∏–µ: {issue_type.description}")
            print()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –∑–∞–¥–∞—á: {e}")
            print()

        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å—ã
        print("üìä –î–û–°–¢–£–ü–ù–´–ï –°–¢–ê–¢–£–°–´:")
        print("-" * 40)
        try:
            statuses = jira.statuses()
            for status in statuses:
                print(f"‚Ä¢ {status.name} (ID: {status.id})")
            print()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤: {e}")
            print()

        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã
        print("‚ö° –î–û–°–¢–£–ü–ù–´–ï –ü–†–ò–û–†–ò–¢–ï–¢–´:")
        print("-" * 40)
        try:
            priorities = jira.priorities()
            for priority in priorities:
                print(f"‚Ä¢ {priority.name} (ID: {priority.id})")
            print()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤: {e}")
            print()

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤
        print("üîÑ –ü–ï–†–ï–•–û–î–´ –î–õ–Ø –¢–ï–°–¢–û–í–û–ô –ó–ê–î–ê–ß–ò:")
        print("-" * 40)
        try:
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É
            test_issue_dict = {
                "project": {"key": project_key},
                "summary": "TEST - –£–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞–¥–∞—á—É",
                "description": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö",
                "issuetype": {"name": default_issue_type},
            }
            print(test_issue_dict)

            test_issue = jira.create_issue(fields=test_issue_dict)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞: {test_issue.key}")

            # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥—ã
            transitions = jira.transitions(test_issue)
            print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã:")
            for transition in transitions:
                print(f"‚Ä¢ {transition['name']} (ID: {transition['id']})")

            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É
            jira.delete_issue(test_issue.key)
            print(f"üóëÔ∏è –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ {test_issue.key} —É–¥–∞–ª–µ–Ω–∞")
            print()

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–¥–∞—á–µ–π: {e}")
            print()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        print("‚öôÔ∏è –ü–†–ò–ú–ï–†–´ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:")
        print("-" * 40)
        if issue_types:
            print(f"# –î–ª—è —Ç–∏–ø–∞ –∑–∞–¥–∞—á–∏ '{issue_types[0].name}':")
            print(f"JIRA_ISSUE_TYPE={issue_types[0].name}")
            print()

        print("# –î–ª—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ 'High':")
        print("JIRA_PRIORITY=High")
        print()

        print("üí° –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ .env —Ñ–∞–π–ª")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Jira: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å URL Jira")
        print("2. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ª–æ–≥–∏–Ω–∞ –∏ API —Ç–æ–∫–µ–Ω–∞")
        print("3. –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–æ–µ–∫—Ç—É")
        print("4. –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Jira –∏–∑ —Å–µ—Ç–∏")


if __name__ == "__main__":
    get_jira_info()
