import logging
from slack_bolt import App
from slack_bolt.adapter.socket_mode import SocketModeHandler
from slack_sdk import WebClient

from config import Config
from jira_client import JiraClient
from incident_manager import IncidentManager
from database import Database, IncidentStatus
from duty_manager import DutyManager
from bot import PermissionsChecker, Bot
from redis_scheduler import RedisNotificationScheduler, RedisClient
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.DEBUG, format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Slack
app = App(token=Config.SLACK_BOT_TOKEN, signing_secret=Config.SLACK_SIGNING_SECRET)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
jira_client = JiraClient()
incident_manager = IncidentManager(
    db=Database(),
    notification_manager=RedisNotificationScheduler(
        redis_client=RedisClient(url=Config.REDIS_URL, db=Config.REDIS_DB),
    ),
)
slack_client = WebClient(token=Config.SLACK_BOT_TOKEN)

permission_checker = PermissionsChecker(
    allowed_button_users=Config.ALLOWED_BUTTON_USERS,
    allowed_channels=Config.ALLOWED_CHANNELS,
)
duty_manager = DutyManager(
    google_sheets_url=Config.GOOGLE_SHEET_URL,
    credentials_path=Config.GOOGLE_CREDENTIALS_PATH,
    sheet_range=Config.GOOGLE_SHEET_RANGE,
)
IncidentBot = Bot(
    slack_client=slack_client,
    permissions_checker=permission_checker,
    duty_manager=duty_manager,
    incident_manager=incident_manager,
    default_responsible_user_id=Config.RESPONSIBLE_USER_ID,
)


@app.event("message")
def handle_message_events(event, say, client):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–∞—Ö –∏ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö"""
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤
    if IncidentBot.is_bot_message(event):
        return

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_id = event.get("user")
    if not user_id:
        return

    channel_id = event.get("channel")
    channel_type = event.get("channel_type")

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–∫–æ–º–∞–Ω–¥—ã –±–æ—Ç—É)
    if channel_type == "im":
        IncidentBot.handle_dm_command(event, say)
        return

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç—Ä–µ–¥–∞—Ö
    if event.get("thread_ts"):
        IncidentBot.handle_thread_message(event, say, client)
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ –∫–∞–Ω–∞–ª
    if not IncidentBot.permissions_checker.is_channel_allowed(channel_id):
        logger.info(f"–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –Ω–µ—Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞: {channel_id}")
        return

    user_name = IncidentBot.get_user_name(user_id)
    message_text = event.get("text", "")

    logger.info(f"–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_name} –≤ –∫–∞–Ω–∞–ª–µ {channel_id}: {message_text}")

    # –°–æ–∑–¥–∞–µ–º —Ç–∏–∫–µ—Ç –≤ Jira
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–µ 300 —Å–∏–º–≤–æ–ª–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –Ω–∞–∑–≤–∞–Ω–∏—è
        title = message_text[:150] if len(message_text) > 150 else message_text
        if len(message_text) > 150:
            title += "..."
        title =title.replace("\n", " ").replace("\r", " ")

        # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–¥
        thread_url = f"https://instoriesworkspace.slack.com/archives/{channel_id}/p{event['ts'].replace('.', '')}"

        ticket_key = jira_client.create_incident_ticket(
            title=title,
            description=message_text,
            reporter=user_name,
            thread_url=thread_url,
        )

        # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ü–∏–¥–µ–Ω—Ç
        incident = incident_manager.create_incident(
            ticket_key=ticket_key,
            channel_id=channel_id,
            thread_ts=event["ts"],
            author_id=user_id,
        )

        if not incident:
            say(
                channel=channel_id,
                thread_ts=event["ts"],
                text="‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö",
            )
            return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–Ω—Ü–∏–¥–µ–Ω—Ç–µ
        info_blocks = [
            {
                "type": "section",
                "text": {
                    "type": "mrkdwn",
                    "text": f"üö® *–ò–Ω—Ü–∏–¥–µ–Ω—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω*\n\n*–°—Å—ã–ª–∫–∞ –Ω–∞ Jira:* {jira_client.get_ticket_url(ticket_key)}",
                },
            }
        ]

        say(channel=channel_id, thread_ts=event["ts"], blocks=info_blocks)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        control_blocks = IncidentBot.create_incident_buttons(incident)
        if control_blocks:
            say(channel=channel_id, thread_ts=event["ts"], blocks=control_blocks)

        # –ó–∞–ø—É—Å–∫–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ Redis
        incident_data = {
            "ticket_key": incident.ticket_key,
            "channel_id": incident.channel_id,
            "thread_ts": incident.thread_ts,
            "author_id": incident.author_id,
            "status": incident.status.value,
            "assigned_to": incident.assigned_to,
            "created_at": (
                incident.created_at.isoformat()
                if incident.created_at
                else datetime.now().isoformat()
            ),
            "last_notification": (
                incident.last_notification.isoformat()
                if incident.last_notification
                else None
            ),
        }

        # –ó–∞–ø—É—Å–∫–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        incident_manager.start_notification_task(
            ticket_key, incident_data, Config.NOTIFICATION_INTERVAL_MINUTES, "default"
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞: {e}")
        say(
            channel=channel_id,
            thread_ts=event["ts"],
            text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞: {str(e)}",
        )


@app.action("take_incident")
def handle_take_incident(ack, body, say):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É'"""
    ack()

    user_id = body["user"]["id"]
    ticket_key = body["actions"][0]["value"]
    channel_id = body["channel"]["id"]
    message_ts = body["message"]["ts"]
    thread_ts = body["message"].get(
        "thread_ts", message_ts
    )  # thread_ts –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é

    # –°—Ä–∞–∑—É –æ—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞
    try:
        slack_client.chat_update(
            channel=channel_id,
            ts=message_ts,
            blocks=[
                {
                    "type": "section",
                    "text": {"type": "mrkdwn", "text": "‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞..."},
                }
            ],
        )
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫: {e}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not IncidentBot.permissions_checker.is_user_allowed_for_buttons(user_id):
        user_name = IncidentBot.get_user_name(user_id)
        say(
            channel=channel_id,
            thread_ts=message_ts,
            text=f"‚ùå {user_name}, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞–º–∏",
        )
        logger.warning(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} ({user_id}) –ø–æ–ø—ã—Ç–∞–ª—Å—è –≤–∑—è—Ç—å –∏–Ω—Ü–∏–¥–µ–Ω—Ç –±–µ–∑ –ø—Ä–∞–≤"
        )

        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        try:
            incident = incident_manager.get_incident(ticket_key)
            if incident:
                blocks = IncidentBot.create_incident_buttons(incident)
                slack_client.chat_update(
                    channel=channel_id, ts=message_ts, blocks=blocks
                )
                logger.info(f"‚úÖ –ö–Ω–æ–ø–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ {ticket_key}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–æ–∫: {e}")

        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤–∑—è—Ç –ª–∏ —É–∂–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç –≤ —Ä–∞–±–æ—Ç—É
    incident = incident_manager.get_incident(ticket_key)
    if not incident:
        logger.error(f"–ò–Ω—Ü–∏–¥–µ–Ω—Ç {ticket_key} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return

    if incident.status != IncidentStatus.CREATED:
        user_name = IncidentBot.get_user_name(user_id)
        say(
            channel=channel_id,
            thread_ts=message_ts,
            text=f"‚ùå {user_name}, –∏–Ω—Ü–∏–¥–µ–Ω—Ç {ticket_key} —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è (—Å—Ç–∞—Ç—É—Å: {incident.status.value})",
        )
        logger.warning(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} ({user_id}) –ø–æ–ø—ã—Ç–∞–ª—Å—è –≤–∑—è—Ç—å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –∏–Ω—Ü–∏–¥–µ–Ω—Ç {ticket_key}"
        )

        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        try:
            blocks = IncidentBot.create_incident_buttons(incident)
            slack_client.chat_update(channel=channel_id, ts=message_ts, blocks=blocks)
            logger.info(f"‚úÖ –ö–Ω–æ–ø–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ {ticket_key}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–æ–∫: {e}")
        return

    user_name = IncidentBot.get_user_name(user_id)
    user_email = IncidentBot.get_user_email(user_id)

    # –ù–∞–∑–Ω–∞—á–∞–µ–º –∏–Ω—Ü–∏–¥–µ–Ω—Ç –≤ —Å–∏—Å—Ç–µ–º–µ
    assigned = incident_manager.take_incident_in_progress(ticket_key, user_id)

    if assigned:
        # –ù–∞–∑–Ω–∞—á–∞–µ–º –∑–∞–¥–∞—á—É –≤ Jira
        if user_email:
            jira_client.assign_ticket(ticket_key, user_email)

        incident = incident_manager.get_incident(ticket_key)

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
        status_text = "üëÄ –í–∑—è—Ç–æ –≤ —Ä–∞–±–æ—Ç—É"
        blocks = [{"type": "section", "text": {"type": "mrkdwn", "text": status_text}}]
        blocks.extend(IncidentBot.create_incident_buttons(incident))

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ (—Ç–æ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º—ã –∏–∑–º–µ–Ω–∏–ª–∏ –Ω–∞ "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞")
        slack_client.chat_update(channel=channel_id, ts=message_ts, blocks=blocks)

        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏
        incident_manager.stop_notification_task(ticket_key)

        # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –≥–ª–∞–∑–∫–∏ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é (thread_ts - —ç—Ç–æ –≤—Ä–µ–º—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è)
        IncidentBot.add_reaction(channel_id, thread_ts, "eyes")

        logger.info(f"–ò–Ω—Ü–∏–¥–µ–Ω—Ç {ticket_key} –≤–∑—è—Ç –≤ —Ä–∞–±–æ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_name}")
    else:
        # –û—à–∏–±–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
        say(
            channel=channel_id,
            thread_ts=message_ts,
            text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ {ticket_key}",
        )


@app.action("awaiting_response")
def handle_awaiting_response(ack, body, say):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–û–∂–∏–¥–∞—é –æ—Ç–≤–µ—Ç'"""
    ack()

    user_id = body["user"]["id"]
    ticket_key = body["actions"][0]["value"]
    channel_id = body["channel"]["id"]
    message_ts = body["message"]["ts"]
    thread_ts = body["message"].get("thread_ts", message_ts)
    # –°—Ä–∞–∑—É –æ—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞
    try:
        slack_client.chat_update(
            channel=channel_id,
            ts=message_ts,
            blocks=[
                {
                    "type": "section",
                    "text": {"type": "mrkdwn", "text": "‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞..."},
                }
            ],
        )
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫: {e}")

    logger.info(
        f"üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ '–û–∂–∏–¥–∞—é –æ—Ç–≤–µ—Ç' –¥–ª—è —Ç–∏–∫–µ—Ç–∞ {ticket_key} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}"
    )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not IncidentBot.permissions_checker.is_user_allowed_for_buttons(user_id):
        user_name = IncidentBot.get_user_name(user_id)
        say(
            channel=channel_id,
            thread_ts=message_ts,
            text=f"‚ùå {user_name}, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞–º–∏",
        )
        logger.warning(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} ({user_id}) –ø–æ–ø—ã—Ç–∞–ª—Å—è –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ –±–µ–∑ –ø—Ä–∞–≤"
        )

        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        try:
            incident = incident_manager.get_incident(ticket_key)
            if incident:
                blocks = IncidentBot.create_incident_buttons(incident)
                slack_client.chat_update(
                    channel=channel_id, ts=message_ts, blocks=blocks
                )
                logger.info(f"‚úÖ –ö–Ω–æ–ø–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ {ticket_key}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–æ–∫: {e}")

        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞
    incident = incident_manager.get_incident(ticket_key)
    if not incident:
        logger.error(f"–ò–Ω—Ü–∏–¥–µ–Ω—Ç {ticket_key} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return

    if incident.status not in (IncidentStatus.ASSIGNED, IncidentStatus.FROZEN):
        user_name = IncidentBot.get_user_name(user_id)
        say(
            channel=channel_id,
            thread_ts=message_ts,
            text=f"‚ùå {user_name}, –Ω–µ–ª—å–∑—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ –≤ —Å—Ç–∞—Ç—É—Å–µ {incident.status.value}",
        )
        logger.warning(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} ({user_id}) –ø–æ–ø—ã—Ç–∞–ª—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ {ticket_key} –≤ –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–µ–º —Å—Ç–∞—Ç—É—Å–µ {incident.status.value}"
        )

        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        try:
            blocks = IncidentBot.create_incident_buttons(incident)
            slack_client.chat_update(channel=channel_id, ts=message_ts, blocks=blocks)
            logger.info(f"‚úÖ –ö–Ω–æ–ø–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ {ticket_key}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–æ–∫: {e}")
        return

    logger.info(
        f"‚úÖ –ü—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –¥–ª—è {ticket_key}"
    )

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
    awaiting_set = incident_manager.set_awaiting_response(ticket_key)
    logger.info(f"üìù –†–µ–∑—É–ª—å—Ç–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞: {awaiting_set}")

    if awaiting_set:
        logger.info(
            f"‚úÖ –°—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∏–Ω—Ü–∏–¥–µ–Ω—Ç {ticket_key}"
        )
        incident = incident_manager.get_incident(ticket_key)
        logger.info(
            f"üìã –ü–æ–ª—É—á–µ–Ω –∏–Ω—Ü–∏–¥–µ–Ω—Ç: —Å—Ç–∞—Ç—É—Å={incident.status if incident else 'None'}"
        )

        if incident:
            logger.info(f"üìù –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ {ticket_key}")
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            blocks = [
                {
                    "type": "section",
                    "text": {
                        "type": "mrkdwn",
                        "text": f"üßò –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç <@{incident.author_id}>",
                    },
                }
            ]
            blocks.extend(IncidentBot.create_incident_buttons(incident))

            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ (—Ç–æ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º—ã –∏–∑–º–µ–Ω–∏–ª–∏ –Ω–∞ "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞")
            slack_client.chat_update(channel=channel_id, ts=message_ts, blocks=blocks)
            IncidentBot.add_reaction(channel_id, thread_ts, "person_in_lotus_position")
            logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ {channel_id}")

            # –ó–∞–ø—É—Å–∫–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–≤—Ç–æ—Ä—É —á–µ—Ä–µ–∑ Redis
            incident_data = {
                "ticket_key": incident.ticket_key,
                "channel_id": incident.channel_id,
                "thread_ts": incident.thread_ts,
                "author_id": incident.author_id,
                "status": incident.status.value,
                "assigned_to": incident.assigned_to,
                "created_at": (
                    incident.created_at.isoformat()
                    if incident.created_at
                    else datetime.now().isoformat()
                ),
                "last_notification": (
                    incident.last_notification.isoformat()
                    if incident.last_notification
                    else None
                ),
            }

            logger.info(f"üîî –ó–∞–ø—É—Å–∫–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–≤—Ç–æ—Ä—É –¥–ª—è {ticket_key}")
            # –ó–∞–ø—É—Å–∫–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–≤—Ç–æ—Ä—É
            incident_manager.start_notification_task(
                ticket_key,
                incident_data,
                Config.AWAITING_RESPONSE_INTERVAL_MINUTES,
                "awaiting_response",
            )

            logger.info(
                f"‚úÖ –ò–Ω—Ü–∏–¥–µ–Ω—Ç {ticket_key} –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –≤ —Å—Ç–∞—Ç—É—Å '–æ–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞'"
            )
        else:
            logger.error(
                f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ü–∏–¥–µ–Ω—Ç {ticket_key} –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è"
            )
    else:
        logger.error(
            f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –¥–ª—è {ticket_key}"
        )


@app.action("close_incident")
def handle_close_incident(ack, body, say):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–ó–∞–∫—Ä—ã—Ç–æ'"""
    ack()

    user_id = body["user"]["id"]
    ticket_key = body["actions"][0]["value"]
    channel_id = body["channel"]["id"]
    message_ts = body["message"]["ts"]
    thread_ts = body["message"].get(
        "thread_ts", message_ts
    )  # thread_ts –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é

    # –°—Ä–∞–∑—É –æ—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞
    try:
        slack_client.chat_update(
            channel=channel_id,
            ts=message_ts,
            blocks=[
                {
                    "type": "section",
                    "text": {"type": "mrkdwn", "text": "‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞..."},
                }
            ],
        )
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫: {e}")

    logger.info(
        f"DEBUG: message_ts={message_ts}, thread_ts={thread_ts}, channel_id={channel_id}"
    )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not IncidentBot.permissions_checker.is_user_allowed_for_buttons(user_id):
        user_name = IncidentBot.get_user_name(user_id)
        say(
            channel=channel_id,
            thread_ts=message_ts,
            text=f"‚ùå {user_name}, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞–º–∏",
        )
        logger.warning(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} ({user_id}) –ø–æ–ø—ã—Ç–∞–ª—Å—è –∑–∞–∫—Ä—ã—Ç—å –∏–Ω—Ü–∏–¥–µ–Ω—Ç –±–µ–∑ –ø—Ä–∞–≤"
        )

        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        try:
            incident = incident_manager.get_incident(ticket_key)
            if incident:
                blocks = IncidentBot.create_incident_buttons(incident)
                slack_client.chat_update(
                    channel=channel_id, ts=message_ts, blocks=blocks
                )
                logger.info(f"‚úÖ –ö–Ω–æ–ø–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ {ticket_key}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–æ–∫: {e}")

        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞
    incident = incident_manager.get_incident(ticket_key)
    if not incident:
        logger.error(f"–ò–Ω—Ü–∏–¥–µ–Ω—Ç {ticket_key} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return

    if incident.status == IncidentStatus.CLOSED:
        user_name = IncidentBot.get_user_name(user_id)
        say(
            channel=channel_id,
            thread_ts=message_ts,
            text=f"‚ùå {user_name}, –∏–Ω—Ü–∏–¥–µ–Ω—Ç {ticket_key} —É–∂–µ –∑–∞–∫—Ä—ã—Ç",
        )
        logger.warning(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} ({user_id}) –ø–æ–ø—ã—Ç–∞–ª—Å—è –∑–∞–∫—Ä—ã—Ç—å —É–∂–µ –∑–∞–∫—Ä—ã—Ç—ã–π –∏–Ω—Ü–∏–¥–µ–Ω—Ç {ticket_key}"
        )

        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        try:
            blocks = IncidentBot.create_incident_buttons(incident)
            slack_client.chat_update(channel=channel_id, ts=message_ts, blocks=blocks)
            logger.info(f"‚úÖ –ö–Ω–æ–ø–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ {ticket_key}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–æ–∫: {e}")
        return

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–∏–∫–µ—Ç –≤ Jira
    logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç {ticket_key} –≤ Jira")
    jira_closed = jira_client.close_incident_ticket(ticket_key)
    logger.info(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞ –≤ Jira: {jira_closed}")

    if jira_closed:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∏–Ω—Ü–∏–¥–µ–Ω—Ç
        incident_manager.close_incident(ticket_key)

        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        blocks = [
            {"type": "section", "text": {"type": "mrkdwn", "text": "‚úÖ *–†–µ—à–µ–Ω–æ!*\n\n"}}
        ]

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ (—Ç–æ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º—ã –∏–∑–º–µ–Ω–∏–ª–∏ –Ω–∞ "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞")
        slack_client.chat_update(channel=channel_id, ts=message_ts, blocks=blocks)

        # –î–æ–±–∞–≤–ª—è–µ–º –∑–µ–ª–µ–Ω—É—é –≥–∞–ª–æ—á–∫—É –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é (thread_ts - —ç—Ç–æ –≤—Ä–µ–º—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è)
        logger.info(
            f"–ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é white_check_mark –∫ —Å–æ–æ–±—â–µ–Ω–∏—é {thread_ts} –≤ –∫–∞–Ω–∞–ª–µ {channel_id}"
        )
        IncidentBot.add_reaction(channel_id, thread_ts, "white_check_mark")

        logger.info(f"–ò–Ω—Ü–∏–¥–µ–Ω—Ç {ticket_key} –∑–∞–∫—Ä—ã—Ç")
    else:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç {ticket_key} –≤ Jira")
        say(
            channel=channel_id,
            thread_ts=message_ts,
            text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Ç–∏–∫–µ—Ç–∞ {ticket_key} –≤ Jira",
        )


@app.action("freeze_incident")
def handle_freeze_incident(ack, body, say):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–ù–µ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å'"""
    ack()

    user_id = body["user"]["id"]
    ticket_key = body["actions"][0]["value"]
    channel_id = body["channel"]["id"]
    message_ts = body["message"]["ts"]
    thread_ts = body["message"].get(
        "thread_ts", message_ts
    )  # thread_ts –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é

    # –°—Ä–∞–∑—É –æ—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞
    try:
        slack_client.chat_update(
            channel=channel_id,
            ts=message_ts,
            blocks=[
                {
                    "type": "section",
                    "text": {"type": "mrkdwn", "text": "‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞..."},
                }
            ],
        )
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫: {e}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not IncidentBot.permissions_checker.is_user_allowed_for_buttons(user_id):
        user_name = IncidentBot.get_user_name(user_id)
        say(
            channel=channel_id,
            thread_ts=message_ts,
            text=f"‚ùå {user_name}, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞–º–∏",
        )
        logger.warning(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} ({user_id}) –ø–æ–ø—ã—Ç–∞–ª—Å—è –∑–∞–º–æ—Ä–æ–∑–∏—Ç—å –∏–Ω—Ü–∏–¥–µ–Ω—Ç –±–µ–∑ –ø—Ä–∞–≤"
        )

        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        try:
            incident = incident_manager.get_incident(ticket_key)
            if incident:
                blocks = IncidentBot.create_incident_buttons(incident)
                slack_client.chat_update(
                    channel=channel_id, ts=message_ts, blocks=blocks
                )
                logger.info(f"‚úÖ –ö–Ω–æ–ø–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ {ticket_key}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–æ–∫: {e}")

        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞
    incident = incident_manager.get_incident(ticket_key)
    if not incident:
        logger.error(f"–ò–Ω—Ü–∏–¥–µ–Ω—Ç {ticket_key} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return

    if incident.status == IncidentStatus.FROZEN:
        user_name = IncidentBot.get_user_name(user_id)
        say(
            channel=channel_id,
            thread_ts=message_ts,
            text=f"‚ùå {user_name}, –∏–Ω—Ü–∏–¥–µ–Ω—Ç {ticket_key} —É–∂–µ –∑–∞–º–æ—Ä–æ–∂–µ–Ω",
        )
        logger.warning(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} ({user_id}) –ø–æ–ø—ã—Ç–∞–ª—Å—è –∑–∞–º–æ—Ä–æ–∑–∏—Ç—å —É–∂–µ –∑–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–π –∏–Ω—Ü–∏–¥–µ–Ω—Ç {ticket_key}"
        )

        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        try:
            blocks = IncidentBot.create_incident_buttons(incident)
            slack_client.chat_update(channel=channel_id, ts=message_ts, blocks=blocks)
            logger.info(f"‚úÖ –ö–Ω–æ–ø–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ {ticket_key}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–æ–∫: {e}")
        return

    # –ó–∞–º–æ—Ä–∞–∂–∏–≤–∞–µ–º –∏–Ω—Ü–∏–¥–µ–Ω—Ç
    frozen = incident_manager.freeze_incident(ticket_key)

    if frozen:
        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∏–Ω—Ü–∏–¥–µ–Ω—Ç
        incident = incident_manager.get_incident(ticket_key)

        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        blocks = [{"type": "section", "text": {"type": "mrkdwn", "text": "ü§´ –ü—Ä–∏–Ω—è—Ç–æ"}}]
        blocks.extend(IncidentBot.create_incident_buttons(incident))

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ (—Ç–æ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º—ã –∏–∑–º–µ–Ω–∏–ª–∏ –Ω–∞ "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞")
        slack_client.chat_update(channel=channel_id, ts=message_ts, blocks=blocks)

    # –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ —Å–Ω–µ–∂–∏–Ω–∫–∏ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é (thread_ts - —ç—Ç–æ –≤—Ä–µ–º—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è)
    IncidentBot.add_reaction(channel_id, thread_ts, "snowflake")

    logger.info(f"–ò–Ω—Ü–∏–¥–µ–Ω—Ç {ticket_key} –∑–∞–º–æ—Ä–æ–∂–µ–Ω")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    logger.info("–ó–∞–ø—É—Å–∫ Slack –±–æ—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞–º–∏...")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    incident_manager.init()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –¥–µ–∂—É—Ä–Ω—ã—Ö
    duty_manager.init()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    handler = SocketModeHandler(app, Config.SLACK_APP_TOKEN)
    handler.start()


if __name__ == "__main__":
    main()
